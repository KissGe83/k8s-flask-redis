- name: Setup Kubernetes Flask + Redis App
  hosts: localhost
  become: true
  vars:
    microk8s_channel: 1.29/stable
    app_image_name: ghcr.io/kissge/flask-redis-app:latest
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies
      apt:
        name:
          - git
          - curl
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - python3-pip
          - docker.io
        state: present

    - name: Enable Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install MicroK8s
      shell: snap install microk8s --classic --channel={{ microk8s_channel }}
      args:
        creates: /snap/bin/microk8s

    - name: Add current user to microk8s group
      user:
        name: "{{ ansible_user_id }}"
        groups: microk8s
        append: yes

    - name: Wait for MicroK8s to be ready
      shell: microk8s status --wait-ready

    - name: Enable MicroK8s addons
      shell: microk8s enable dns storage ingress helm3 metrics-server

    - name: Create image pull secret for GHCR
      shell: |
        microk8s kubectl create secret docker-registry ghcr-secret \
          --docker-server=https://ghcr.io \
          --docker-username=${GITHUB_USER} \
          --docker-password=${GHCR_TOKEN} \
          --docker-email=dev@example.com || true
      environment:
        GITHUB_USER: "{{ lookup('env', 'GHCR_USER') }}"
        GHCR_TOKEN: "{{ lookup('env', 'GHCR_TOKEN') }}"

    - name: Apply Kubernetes configs
      shell: microk8s kubectl apply -f {{ item }}
      loop:
        - k8s/config.yaml
        - k8s/secret.yaml
        - k8s/redis-pv.yaml
        - k8s/redis-pvc.yaml
        - k8s/hpa.yaml
        - k8s/redis-deployment.yaml
        - k8s/redis-service.yaml
        - k8s/flask-deployment.yaml
        - k8s/flask-service.yaml
        - k8s/flask-ingress.yaml
